// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: rpc/group/group.proto

package group

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群主
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// 群名称
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GroupId   string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Notice    string `protobuf:"bytes,4,opt,name=notice,proto3" json:"notice,omitempty"`
	Intro     string `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	Avatar    string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	CreatedAt int64  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type      int32  `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{0}
}

func (x *GroupInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupInfo) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *GroupInfo) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *GroupInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GroupInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *GroupInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群主
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// 成员
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	// 群名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 群ID，如果不传，zim会生成一个群ID
	GroupId string `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Notice  string `protobuf:"bytes,5,opt,name=notice,proto3" json:"notice,omitempty"`
	Intro   string `protobuf:"bytes,6,opt,name=intro,proto3" json:"intro,omitempty"`
	Avatar  string `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReq) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateReq) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateReq) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *CreateReq) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *CreateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type CreateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群ID
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateRsp) Reset() {
	*x = CreateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRsp) ProtoMessage() {}

func (x *CreateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRsp.ProtoReflect.Descriptor instead.
func (*CreateRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRsp) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetJoinedGroupListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
}

func (x *GetJoinedGroupListReq) Reset() {
	*x = GetJoinedGroupListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupListReq) ProtoMessage() {}

func (x *GetJoinedGroupListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupListReq.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupListReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{3}
}

func (x *GetJoinedGroupListReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

type GetJoinedGroupListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GroupInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetJoinedGroupListRsp) Reset() {
	*x = GetJoinedGroupListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinedGroupListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinedGroupListRsp) ProtoMessage() {}

func (x *GetJoinedGroupListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinedGroupListRsp.ProtoReflect.Descriptor instead.
func (*GetJoinedGroupListRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{4}
}

func (x *GetJoinedGroupListRsp) GetList() []*GroupInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type SyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin    string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SyncReq) Reset() {
	*x = SyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReq) ProtoMessage() {}

func (x *SyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReq.ProtoReflect.Descriptor instead.
func (*SyncReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{5}
}

func (x *SyncReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *SyncReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SyncReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SyncRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GroupInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SyncRsp) Reset() {
	*x = SyncRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRsp) ProtoMessage() {}

func (x *SyncRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRsp.ProtoReflect.Descriptor instead.
func (*SyncRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{6}
}

func (x *SyncRsp) GetList() []*GroupInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type JoinGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin     string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *JoinGroupReq) Reset() {
	*x = JoinGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupReq) ProtoMessage() {}

func (x *JoinGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupReq.ProtoReflect.Descriptor instead.
func (*JoinGroupReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{7}
}

func (x *JoinGroupReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *JoinGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type JoinGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinGroupRsp) Reset() {
	*x = JoinGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupRsp) ProtoMessage() {}

func (x *JoinGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupRsp.ProtoReflect.Descriptor instead.
func (*JoinGroupRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{8}
}

type InviteUserToGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      string   `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	GroupId  string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserList []string `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
}

func (x *InviteUserToGroupReq) Reset() {
	*x = InviteUserToGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserToGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserToGroupReq) ProtoMessage() {}

func (x *InviteUserToGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserToGroupReq.ProtoReflect.Descriptor instead.
func (*InviteUserToGroupReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{9}
}

func (x *InviteUserToGroupReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *InviteUserToGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InviteUserToGroupReq) GetUserList() []string {
	if x != nil {
		return x.UserList
	}
	return nil
}

type InviteUserToGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InviteUserToGroupRsp) Reset() {
	*x = InviteUserToGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserToGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserToGroupRsp) ProtoMessage() {}

func (x *InviteUserToGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserToGroupRsp.ProtoReflect.Descriptor instead.
func (*InviteUserToGroupRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{10}
}

type QuitGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin     string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *QuitGroupReq) Reset() {
	*x = QuitGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupReq) ProtoMessage() {}

func (x *QuitGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupReq.ProtoReflect.Descriptor instead.
func (*QuitGroupReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{11}
}

func (x *QuitGroupReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *QuitGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type QuitGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuitGroupRsp) Reset() {
	*x = QuitGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitGroupRsp) ProtoMessage() {}

func (x *QuitGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitGroupRsp.ProtoReflect.Descriptor instead.
func (*QuitGroupRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{12}
}

type KickGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      string   `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	GroupId  string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserList []string `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
}

func (x *KickGroupMemberReq) Reset() {
	*x = KickGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberReq) ProtoMessage() {}

func (x *KickGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberReq.ProtoReflect.Descriptor instead.
func (*KickGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{13}
}

func (x *KickGroupMemberReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *KickGroupMemberReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *KickGroupMemberReq) GetUserList() []string {
	if x != nil {
		return x.UserList
	}
	return nil
}

type KickGroupMemberRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickGroupMemberRsp) Reset() {
	*x = KickGroupMemberRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickGroupMemberRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickGroupMemberRsp) ProtoMessage() {}

func (x *KickGroupMemberRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickGroupMemberRsp.ProtoReflect.Descriptor instead.
func (*KickGroupMemberRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{14}
}

type DismissGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin     string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *DismissGroupReq) Reset() {
	*x = DismissGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupReq) ProtoMessage() {}

func (x *DismissGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupReq.ProtoReflect.Descriptor instead.
func (*DismissGroupReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{15}
}

func (x *DismissGroupReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *DismissGroupReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DismissGroupRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DismissGroupRsp) Reset() {
	*x = DismissGroupRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissGroupRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissGroupRsp) ProtoMessage() {}

func (x *DismissGroupRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissGroupRsp.ProtoReflect.Descriptor instead.
func (*DismissGroupRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{16}
}

type GroupMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Member    string `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	Nickname  string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GroupMemberInfo) Reset() {
	*x = GroupMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberInfo) ProtoMessage() {}

func (x *GroupMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberInfo.ProtoReflect.Descriptor instead.
func (*GroupMemberInfo) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{17}
}

func (x *GroupMemberInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupMemberInfo) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *GroupMemberInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GroupMemberInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GroupMemberInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetGroupMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin     string `protobuf:"bytes,1,opt,name=uin,proto3" json:"uin,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Offset  int64  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit   int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetGroupMemberListReq) Reset() {
	*x = GetGroupMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListReq) ProtoMessage() {}

func (x *GetGroupMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{18}
}

func (x *GetGroupMemberListReq) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *GetGroupMemberListReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberListReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetGroupMemberListReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetGroupMemberListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GroupMemberInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetGroupMemberListRsp) Reset() {
	*x = GetGroupMemberListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListRsp) ProtoMessage() {}

func (x *GetGroupMemberListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListRsp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{19}
}

func (x *GetGroupMemberListRsp) GetList() []*GroupMemberInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetGroupMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Member  string `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *GetGroupMemberInfoReq) Reset() {
	*x = GetGroupMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberInfoReq) ProtoMessage() {}

func (x *GetGroupMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{20}
}

func (x *GetGroupMemberInfoReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberInfoReq) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

type GetGroupMemberInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Member    string `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	Nickname  string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetGroupMemberInfoRsp) Reset() {
	*x = GetGroupMemberInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberInfoRsp) ProtoMessage() {}

func (x *GetGroupMemberInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberInfoRsp.ProtoReflect.Descriptor instead.
func (*GetGroupMemberInfoRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{21}
}

func (x *GetGroupMemberInfoRsp) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberInfoRsp) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *GetGroupMemberInfoRsp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetGroupMemberInfoRsp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetGroupMemberInfoRsp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SetGroupMemberInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Member   string `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *SetGroupMemberInfoReq) Reset() {
	*x = SetGroupMemberInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberInfoReq) ProtoMessage() {}

func (x *SetGroupMemberInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberInfoReq.ProtoReflect.Descriptor instead.
func (*SetGroupMemberInfoReq) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{22}
}

func (x *SetGroupMemberInfoReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *SetGroupMemberInfoReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type SetGroupMemberInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetGroupMemberInfoRsp) Reset() {
	*x = SetGroupMemberInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_group_group_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupMemberInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupMemberInfoRsp) ProtoMessage() {}

func (x *SetGroupMemberInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_group_group_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupMemberInfoRsp.ProtoReflect.Descriptor instead.
func (*SetGroupMemberInfoRsp) Descriptor() ([]byte, []int) {
	return file_rpc_group_group_proto_rawDescGZIP(), []int{23}
}

var File_rpc_group_group_proto protoreflect.FileDescriptor

var file_rpc_group_group_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0xe8, 0x01, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x01,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x22, 0x26, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x6e, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x33, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x73, 0x70, 0x22, 0x60, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x22, 0x3b, 0x0a,
	0x0c, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x51, 0x75,
	0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x12, 0x4b, 0x69,
	0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4b, 0x69,
	0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x22, 0x3e, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x22, 0x11, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x73, 0x70, 0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x72, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa4, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x73, 0x70, 0x32, 0xd9, 0x06, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x30, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x09, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x0f, 0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4b,
	0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x44, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x88, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6f,
	0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x7a, 0x69, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0xa2, 0x02, 0x03, 0x52, 0x47, 0x58, 0xaa,
	0x02, 0x09, 0x52, 0x70, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0xca, 0x02, 0x09, 0x52, 0x70,
	0x63, 0x5c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0xe2, 0x02, 0x15, 0x52, 0x70, 0x63, 0x5c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0a, 0x52, 0x70, 0x63, 0x3a, 0x3a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_group_group_proto_rawDescOnce sync.Once
	file_rpc_group_group_proto_rawDescData = file_rpc_group_group_proto_rawDesc
)

func file_rpc_group_group_proto_rawDescGZIP() []byte {
	file_rpc_group_group_proto_rawDescOnce.Do(func() {
		file_rpc_group_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_group_group_proto_rawDescData)
	})
	return file_rpc_group_group_proto_rawDescData
}

var file_rpc_group_group_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_rpc_group_group_proto_goTypes = []interface{}{
	(*GroupInfo)(nil),             // 0: rpc.group.GroupInfo
	(*CreateReq)(nil),             // 1: rpc.group.CreateReq
	(*CreateRsp)(nil),             // 2: rpc.group.CreateRsp
	(*GetJoinedGroupListReq)(nil), // 3: rpc.group.GetJoinedGroupListReq
	(*GetJoinedGroupListRsp)(nil), // 4: rpc.group.GetJoinedGroupListRsp
	(*SyncReq)(nil),               // 5: rpc.group.SyncReq
	(*SyncRsp)(nil),               // 6: rpc.group.SyncRsp
	(*JoinGroupReq)(nil),          // 7: rpc.group.JoinGroupReq
	(*JoinGroupRsp)(nil),          // 8: rpc.group.JoinGroupRsp
	(*InviteUserToGroupReq)(nil),  // 9: rpc.group.InviteUserToGroupReq
	(*InviteUserToGroupRsp)(nil),  // 10: rpc.group.InviteUserToGroupRsp
	(*QuitGroupReq)(nil),          // 11: rpc.group.QuitGroupReq
	(*QuitGroupRsp)(nil),          // 12: rpc.group.QuitGroupRsp
	(*KickGroupMemberReq)(nil),    // 13: rpc.group.KickGroupMemberReq
	(*KickGroupMemberRsp)(nil),    // 14: rpc.group.KickGroupMemberRsp
	(*DismissGroupReq)(nil),       // 15: rpc.group.DismissGroupReq
	(*DismissGroupRsp)(nil),       // 16: rpc.group.DismissGroupRsp
	(*GroupMemberInfo)(nil),       // 17: rpc.group.GroupMemberInfo
	(*GetGroupMemberListReq)(nil), // 18: rpc.group.GetGroupMemberListReq
	(*GetGroupMemberListRsp)(nil), // 19: rpc.group.GetGroupMemberListRsp
	(*GetGroupMemberInfoReq)(nil), // 20: rpc.group.GetGroupMemberInfoReq
	(*GetGroupMemberInfoRsp)(nil), // 21: rpc.group.GetGroupMemberInfoRsp
	(*SetGroupMemberInfoReq)(nil), // 22: rpc.group.SetGroupMemberInfoReq
	(*SetGroupMemberInfoRsp)(nil), // 23: rpc.group.SetGroupMemberInfoRsp
}
var file_rpc_group_group_proto_depIdxs = []int32{
	0,  // 0: rpc.group.GetJoinedGroupListRsp.list:type_name -> rpc.group.GroupInfo
	0,  // 1: rpc.group.SyncRsp.list:type_name -> rpc.group.GroupInfo
	17, // 2: rpc.group.GetGroupMemberListRsp.list:type_name -> rpc.group.GroupMemberInfo
	5,  // 3: rpc.group.Group.Sync:input_type -> rpc.group.SyncReq
	1,  // 4: rpc.group.Group.Create:input_type -> rpc.group.CreateReq
	3,  // 5: rpc.group.Group.GetJoinedGroupList:input_type -> rpc.group.GetJoinedGroupListReq
	7,  // 6: rpc.group.Group.JoinGroup:input_type -> rpc.group.JoinGroupReq
	9,  // 7: rpc.group.Group.InviteUserToGroup:input_type -> rpc.group.InviteUserToGroupReq
	11, // 8: rpc.group.Group.QuitGroup:input_type -> rpc.group.QuitGroupReq
	13, // 9: rpc.group.Group.KickGroupMember:input_type -> rpc.group.KickGroupMemberReq
	15, // 10: rpc.group.Group.DismissGroup:input_type -> rpc.group.DismissGroupReq
	18, // 11: rpc.group.Group.GetGroupMemberList:input_type -> rpc.group.GetGroupMemberListReq
	20, // 12: rpc.group.Group.GetGroupMemberInfo:input_type -> rpc.group.GetGroupMemberInfoReq
	22, // 13: rpc.group.Group.SetGroupMemberInfo:input_type -> rpc.group.SetGroupMemberInfoReq
	6,  // 14: rpc.group.Group.Sync:output_type -> rpc.group.SyncRsp
	2,  // 15: rpc.group.Group.Create:output_type -> rpc.group.CreateRsp
	4,  // 16: rpc.group.Group.GetJoinedGroupList:output_type -> rpc.group.GetJoinedGroupListRsp
	8,  // 17: rpc.group.Group.JoinGroup:output_type -> rpc.group.JoinGroupRsp
	10, // 18: rpc.group.Group.InviteUserToGroup:output_type -> rpc.group.InviteUserToGroupRsp
	12, // 19: rpc.group.Group.QuitGroup:output_type -> rpc.group.QuitGroupRsp
	14, // 20: rpc.group.Group.KickGroupMember:output_type -> rpc.group.KickGroupMemberRsp
	16, // 21: rpc.group.Group.DismissGroup:output_type -> rpc.group.DismissGroupRsp
	19, // 22: rpc.group.Group.GetGroupMemberList:output_type -> rpc.group.GetGroupMemberListRsp
	21, // 23: rpc.group.Group.GetGroupMemberInfo:output_type -> rpc.group.GetGroupMemberInfoRsp
	23, // 24: rpc.group.Group.SetGroupMemberInfo:output_type -> rpc.group.SetGroupMemberInfoRsp
	14, // [14:25] is the sub-list for method output_type
	3,  // [3:14] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_group_group_proto_init() }
func file_rpc_group_group_proto_init() {
	if File_rpc_group_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_group_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinedGroupListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserToGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserToGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickGroupMemberRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissGroupRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_group_group_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupMemberInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_group_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_group_group_proto_goTypes,
		DependencyIndexes: file_rpc_group_group_proto_depIdxs,
		MessageInfos:      file_rpc_group_group_proto_msgTypes,
	}.Build()
	File_rpc_group_group_proto = out.File
	file_rpc_group_group_proto_rawDesc = nil
	file_rpc_group_group_proto_goTypes = nil
	file_rpc_group_group_proto_depIdxs = nil
}
