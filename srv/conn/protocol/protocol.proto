syntax = "proto3";

option go_package = "github.com/iobrother/zim/conn/protocol";

package zim.conn.protocol;

enum CmdId {
  Cmd_Raw = 0;

  Cmd_Noop = 6;
  Cmd_Signalling = 243;

  Cmd_Error = 500;

  // conn
  Cmd_Login = 1001;
  Cmd_Logout = 1002;
  Cmd_Kick = 1003;

  // msg
  Cmd_Msg = 1101;               // S->C 服务器推送
  Cmd_Sync = 1102;              // 同步消息，从redis缓存中获取
  Cmd_Send = 1103;
  Cmd_MsgAck = 1104;
}

enum ErrorCode {
  Success = 0;
  InvalidToken = 1001; // 无效的令牌
  TokenExpired = 1002; // 令牌过期
  TokenRevoked = 1003; // 令牌已被吊销
  LoginConflict = 1004; // 登录冲突
}

message Error {
  int32 code = 1;
  string message = 2;
}

message LoginReq {
  string uin = 1;
  string tag = 2;
  string token = 3;
  string device_id = 4;
  string device_name = 5;
  string platform = 6;
  bool is_new = 7;
}

message LoginRsp {

}

message LogoutReq {

}

message LogoutRsp {

}

message Noop {

}

message Kick {
  string reason = 1;
}

message Msg {
  int64 id = 1;
  int32 conv_type = 2;
  int32 type = 3;
  string content = 4;
  string sender = 5;
  string target = 6;
  int64 send_time = 7;
  string client_uuid = 8;
  repeated string at_user_list = 9;
  string owner = 10;
  bool is_transparent = 11;
}

// 同步消息，该接口从redis中同步消息
message SyncMsgReq {
  int64 offset = 1; // offset为本地最近一条消息的发送时间
  int64 limit = 2;
}

message SyncMsgRsp {
  repeated Msg list = 1;
}

message SendReq {
  int32 conv_type = 1;
  int32 msg_type = 2;
  string sender = 3;
  string target = 4;
  string content = 5;
  string client_uuid = 6;
  repeated string at_user_list = 7;
  bool is_transparent = 8;
}

message SendRsp {
  int64 id = 1;
  int64 send_time = 2;
  string client_uuid = 3;
}

message MsgAckReq {
  int64 id = 1;
}

message MsgAckRsp {
}
